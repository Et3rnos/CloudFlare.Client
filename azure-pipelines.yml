variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  vmImageName: 'windows-latest'

stages:
- stage: buildandtest
  displayName: CloudFlare.Client
  jobs: 
    - job: buildandtest
      displayName: Build and Test
      pool:
        vmImage: $(vmImageName)
      
      steps:
    
      - task: SonarCloudPrepare@1
        displayName: Prepare Sonar Cloud
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'zingz0r-github'
          scannerMode: 'MSBuild'
          projectKey: 'CloudFlare.Client'
          projectName: 'CloudFlare.Client'
          projectVersion: '$(Build.BuildNumber)'
      
      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
          feedsToUse: 'select'
          vstsFeed: 'd5f72524-9a3d-4cca-ac65-8688b67830d4/f7ea4fd7-43dc-4f24-a491-8f013b20ab55'
      
      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: build
          projects: 'CloudFlare.Client/CloudFlare.Client.csproj'
          arguments: '--configuration $(buildConfiguration)'
      
      - task: DotNetCoreCLI@2
        displayName: 'Test'
        env:
          ApiKey: $(ApiKey)
          EmailAddress: $(EmailAddress)
        inputs:
          command: test
          projects: 'CloudFlare.Client.Test/CloudFlare.Client.Test.csproj'
          arguments: '--no-build --logger trx --configuration $(buildConfiguration) --collect "Code coverage"'

      - task: SonarCloudAnalyze@1
        displayName: "Analyze Code with SonarCloud"

      - task: SonarCloudPublish@1
        displayName: "Publish Code Analysis Results"
      
      - task: CopyFiles@2
        displayName: Copy Files
        inputs:
          SourceFolder: 'CloudFlare.Client/bin'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      
      - task: PublishBuildArtifacts@1
        displayName: Publish To Artifactory
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'